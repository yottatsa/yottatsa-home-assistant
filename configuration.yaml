homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 30
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/London
  # Customization file
  customize: !include customize.yaml
  auth_providers:
    - type: homeassistant
    - type: trusted_networks
      allow_bypass_login: true
      trusted_networks:
        - 127.0.0.1
        - ::1
        - 192.168.1.0/24
        - fe80::/64

zone:
  - name: Facebook London
    latitude: 51.516750365184734
    longitude: -0.13420922853739234
    icon: mdi:facebook-workplace
    radius: 250

system_health:

google_assistant:
  project_id: home-22391
  api_key: !secret homegraph
  exposed_domains:
    - climate
    - switch
  entity_config:
    switch.heater:
      expose: False

frontend:

config:

http:
  base_url: https://home.yottatsa.name
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - ::1

conversation:

recorder:
  purge_interval: 1
  purge_keep_days: 1
  db_url: sqlite:////dev/shm/home-assistant_v2.db
  include:
    domains:
      - climate
      - device_tracker
      - proximity
      - person
    entities:
      - sensor.dark_sky_temperature
      - sensor.dark_sky_humidity
      - sensor.bedroom_sensor_temperature
      - sensor.bedroom_sensor_light_level
      - sensor.living_room_temperature_filtered
      - sensor.living_room_temperature
      - sensor.living_room_humidity
      - sensor.heater_wifi_signal
      - sensor.climate_wifi_signal
      - sensor.climate_temperature
      - sensor.climate_humidity
      - binary_sensor.bedroom_sensor_motion
      - binary_sensor.livingroom_motion_sensor
      - sensor.printed_pages
      - sensor.cpu_thermal_zone_0
      - sensor.disk_use_percent
      - sensor.memory_use_percent
      - sensor.processor_use
      - sensor.home_to_facebook_london
      - sensor.home_to_lsbu
      - sensor.heater
      - sensor.heater_wifi_signal_sensor
      - switch.heater
      - binary_sensor.rpi_power_status
      - binary_sensor.heater_heartbeat
      - sensor.bedroom_speaker_alarm

history:

logbook:
  include: {}

map:

sun:

mqtt:
  broker: 127.0.0.1
  discovery: True
  username: homeassistant
  password: !secret mosquitto

discovery:
  ignore:
    - igd
  enable:
#    - dlna_dmr

googlehome:
  devices:
    - host: 192.168.1.220
      track_alarms: true
      track_devices: false

sensor:
  - platform: dht
    sensor: AM2302
    name: Living Room
    pin: 24
    monitored_conditions:
      - temperature
      - humidity
    temperature_offset: -0.95
  - platform: filter
    name: living_room_temperature_filtered
    entity_id: sensor.living_room_temperature
    filters:
      - filter: outlier
        window_size: 4 
        radius: 2.0
  - platform: template
    sensors:
      printed_pages:
        friendly_name: 'Printed'
        value_template: "{{ (state_attr('sensor.hp_laserjet_professional_m1212nf_mfp', '1.3.6.1.2.1.43.10.2.1.4.1.1') | int) or None }}"
        unit_of_measurement: pages
      temperature:
        friendly_name: 'Temperature'
        value_template: >
          {{ (is_state('timer.alarm_clock', 'active') and
          states.sensor.climate_temperature.state | float or
          states.sensor.living_room_temperature_filtered.state | float or
          states.sensor.living_room_temperature_filtered.state | float
          )}}
        unit_of_measurement: °C
  - platform: command_line
    name: CPU Thermal Zone 0
    unit_of_measurement: °C
    command: "cat /sys/devices/virtual/thermal/thermal_zone0/temp"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
  - platform: darksky
    api_key: !secret darksky_api_key
    monitored_conditions:
      - temperature
      - humidity
      - minutely_summary
  - platform: history_stats
    name: Heater
    entity_id: switch.heater
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

binary_sensor:
  - platform: rpi_power
  - platform: sdnotify
  - platform: workday
    country: UK
    workdays: [mon, tue, wed, thu, fri]

switch:
  - platform: template
    switches:
      tv:
        friendly_name: "TV"
        value_template: "{{ is_state('media_player.hdmi_0', 'on') }}"
        turn_on:
          service: script.switch_on_apple_tv
        turn_off:
          service: hdmi_cec.standby
      alarm_clock:
        friendly_name: "Alarm Clock"
        value_template: "{{ is_state('timer.alarm_clock', 'active') }}"
        turn_on:
          service: timer.start
          data_template:
            entity_id: timer.alarm_clock
            duration: >
                   {{ states.sensor.bedroom_speaker_alarm.state == "unavailable" and "07:30:00" or
                      ((strptime(states.sensor.bedroom_speaker_alarm.state.replace("+00:00",".0Z"), "%Y-%m-%dT%H:%M:%S.%fZ") - utcnow().replace(tzinfo=None)).total_seconds() | int - 900) }}
        turn_off:
          service: timer.cancel
          data:
            entity_id: timer.alarm_clock

#nipca:

# cloud:

# zeroconf:

ios:

homekit:
  filter:
    include_entities:
      - sensor.living_room_humidity
      - climate.heater
      - switch.alarm_clock
      - media_player.tv

#input_select:
#  tv_inputs:
#    name: TV Inputs
#    options:
#      - Apple TV
#      - Pi HDMI2
#    initial: Apple TV
#    icon: mdi:television

media_player:
  - platform: philips_js
    host: 192.168.1.6
    api_version: 6
    turn_on_action:
      service: media_player.turn_on
      data:
        entity_id: media_player.hdmi_0
  - platform: universal
    name: TV
    children:
      - media_player.philips_tv
      - media_player.hdmi_0
    commands:
      turn_on:
        service: media_player.turn_on
        data:
          entity_id: media_player.hdmi_0
#      turn_on:
#        service: script.switch_on_apple_tv
      turn_off:
        service: hdmi_cec.standby
    attributes:
      state: media_player.hdmi_0
#      source: input_select.tv_inputs
#      source_list: input_select.tv_inputs|options

light:
#  - platform: ambilights
#    host: 192.168.1.6

logger:
  default: warn
  logs:
    urllib3: error
    #homeassistant.components.switch.hdmi_cec: debug
    #homeassistant.components.hdmi_cec: debug
    #pycec: info

#apple_tv:
#  - host: 192.168.1.246
#    login_id: !secret pyatv_loginid
#    credentials: !secret pyatv_credentials

climate:
  - platform: generic_thermostat
    name: Heater
    heater: switch.heater
    target_sensor: sensor.temperature
    min_temp: 18
    max_temp: 23
    ac_mode: False
    min_cycle_duration: 
      minutes: 10
    cold_tolerance: 0.3
    hot_tolerance: 0.1
    keep_alive:
      minutes: 1
    precision: 0.1
    initial_operation_mode: auto

hdmi_cec:
  osd_name: raspberry
  platform: media_player
  devices:
    Philips TV: 0.0.0.0
    Apple TV: 1.0.0.0
    Pi: 2.0.0.0

device_tracker:
#  - platform: ee_brightbox
#    password: !secret ee
#    interval_seconds: 120
  - platform: huesensor
    interval_seconds: 60

proximity:
  home:
    zone: home
    devices:
      - person.vladimir
      - person.evgenii
    tolerance: 50
  facebook_london:
    zone: facebook_london
    devices:
      - person.vladimir
    tolerance: 50

person:
  - name: Vladimir
    id: yottatsa
    device_trackers:
      - device_tracker.vladimir_eremins_iphone
      - device_tracker.hue_vladimir_eremins_iphone
  - name: Evgenii
    id: judgin06
    device_trackers:
      - device_tracker.hue_keenetic_s

#device_sun_light_trigger:
#  light_group: group.all_lights
#  light_profile: reading
#  device_group: group.presence

timer:
  alarm_clock:
    duration: '07:30:00'

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
